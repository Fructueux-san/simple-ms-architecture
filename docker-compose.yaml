services:
  auth:
    build: ./auth/
    container_name: ms-auth
    environment:
      - MYSQL_HOST=127.0.0.1
      - MYSQL_USER=auth_user
      - MYSQL_PORT=3306
      - MYSQL_DB=auth
      - MYSQL_PASSWORD=Auth123
      - JWT_SECRET=thesuperstrongsecret
    ports:
      - 5000:5000
    network_mode: 'host'


  converter:
    container_name: ms-converter
    build: ./converter/
    environment:
      - RABBIT_HOST=rabbitmq
      - RABBIT_PASSWORD=thesuperpassword
      - RABBIT_USER=theeternal
      - VIDEO_QUEUE=video
      - MP3_QUEUE=mp3
      - MONGO_HOST=ms-mongo
  gateway:
    container_name: ms-gateway
    build: ./gateway/
    environment:
      - MONGO_HOST=mongodb://ms-mongo
      - MONGO_USER=mongooo
      - MONGO_PORT=27017
      - MONGO_DB=thebestdbever
      - RABBIT_HOST=rabbitmq
      - RABBIT_PASSWORD=thelocaluserpassword
      - RABBIT_USER=local
      - RABBIT_PORT=5432
      - VIDEO_QUEUE=video
      - MP3_QUEUE=mp3
      - AUTH_SVC_ADDRESS=auth
      - AUTH_SVC_PORT=5000
    ports:
      - 8000:8080
    depends_on:
      - rabbitmq
      - auth
      - notification
      - converter

  notification:
    container_name: ms-notification
    build: ./notification/
    environment:
      - MONGO_HOST=mongodb://localhost
      - MONGO_USER=mongooo
      - MONGO_PORT=27017
      - MONGO_DB=thebestdbever
      - RABBIT_HOST=rabbitmq
      - RABBIT_PASSWORD=thelocaluserpassword
      - RABBIT_USER=local
      - RABBIT_PORT=5432
      - VIDEO_QUEUE=video
      - MP3_QUEUE=mp3
      - EMAIL_ADDRESS=dev@debian.testing
      - EMAIL_PASSWORD=theultimatemegapassword
    depends_on:
      - rabbitmq
  rabbitmq:
      hostname: rabbitmq
      container_name: ms-rabbitmq
      image: rabbitmq:3.9-management
      command: rabbitmq-server
      ports:
        - "5672:5672"
        - "15672:15672"
      volumes:
        - ./rabbit/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
        - ./rabbit/definitions.json:/etc/rabbitmq/definitions.json:ro

  mongo:
    image: mongo
    container_name: ms-mongo
    restart: always
    volumes:
      - /var/db/mongo:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  #  database:
  #    image: mysql:8.0
  #    restart: always
  #    container_name: ms-database
  #      #command: mysqld --mysql-native-password=ON # important for auth service (mysql >=8.0)
  #    command: mysqld --authentication-policy=caching_sha2_password
  #    volumes:
  #      - ./auth/init.sql:/docker-entrypoint-initdb.d/auth.sql:ro
  #    environment:
  #      - MYSQL_ROOT_PASSWORD=thecoolrootpassword
  #      - MYSQL_USER=msdbuser
  #      - MYSQL_PASSWORD=thedbuserpassword
  #      - MYSQL_DATABASE=thebestdbever
  #
